import type { Options as AjvOptions, ErrorObject as AjvErrorObject } from 'ajv';
import type { JSONSchema7 } from 'json-schema';
import type { Root } from 'mdast';
import type { VFileMessage } from 'vfile-message';
export interface Settings {
    /**
     * Global workspace file associations mapping (for linter extension).
     *
     * **Example**: `'schemas/thing.schema.yaml': ['content/things/*.md']`
     */
    schemas?: Record<string, string[]>;
    /**
     * Direct schema embedding (for using inside an `unified` transform pipeline).
     *
     * Format: JSON Schema - draft-2019-09
     *
     * **Documentation**: https://ajv.js.org/json-schema.html#draft-07
     */
    embed?: JSONSchema7;
    /**
     * **Documentation**: https://ajv.js.org/options.html
     */
    ajvOptions?: AjvOptions;
}
type JSONSchemaReference = 'https://ajv.js.org/json-schema.html';
export interface FrontmatterSchemaMessage extends VFileMessage {
    schema: AjvErrorObject & {
        url: JSONSchemaReference;
    };
}
declare const remarkFrontmatterSchema: import("unified").Plugin<void[] | [Settings | [boolean | import("unified-lint-rule/lib").Label | import("unified-lint-rule/lib").Severity, (Settings | undefined)?] | undefined], Root, Root>;
export default remarkFrontmatterSchema;
//# sourceMappingURL=index.d.ts.map